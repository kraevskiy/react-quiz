{"version":3,"sources":["components/FinishedQuiz/FinishedQuiz.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","hoc/Layout/Layout.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","classes","this","props","children","Component","AnswerItem","cls","state","push","join","onClick","onAnswerClick","answer","id","text","AnswersList","answers","map","index","key","ActiveQuiz","Question","answerNumber","question","quizLenght","FinishQuiz","FinishedQuiz","error","success","Quiz","isFinished","activeQuestion","answerState","quiz","rightAnswerId","onAnswerClickHandler","answerId","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","length","QuizWrapper","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.df6681df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__D-CkC\",\"success\":\"FinishedQuiz_success__jBBc5\",\"error\":\"FinishedQuiz_error__KSdom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__18Rwf\",\"QuizWrapper\":\"Quiz_QuizWrapper__c8INT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__Dpsgu\",\"Question\":\"ActiveQuiz_Question__18iOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3PJVi\",\"success\":\"AnswerItem_success__30eEE\",\"error\":\"AnswerItem_error___hrWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BpO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__EwYQd\"};","import React, {Component} from \"react\"\nimport classes from './Layout.module.css'\n\nclass Layout extends Component{\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Layout}>\n\n\t\t\t\t<main>\n\t\t\t\t\t{ this.props.children}\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Layout","import React from 'react';\nimport classes from './AnswerItem.module.css'\n\nconst AnswerItem = props => {\n\tconst cls = [classes.AnswerItem]\n\tif(props.state){\n\t\tcls.push(classes[props.state])\n\t}\n\treturn (\n\t\t<li\n\t\t\tclassName={cls.join(' ')}\n\t\t\tonClick={() => props.onAnswerClick(props.answer.id)}\n\t\t>\n\t\t\t{props.answer.text}\n\t\t</li>\n\t)\n}\n\nexport default AnswerItem;","import React from 'react';\nimport classes from './AnswersList.module.css'\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\n\nconst AnswersList = props => (\n\t<ul className={classes.AnswersList}>\n\t\t{props.answers.map((answer, index) => {\n\t\t\treturn (\n\t\t\t\t<AnswerItem\n\t\t\t\t\tkey={index}\n\t\t\t\t\tanswer={answer}\n\t\t\t\t\tonAnswerClick={props.onAnswerClick}\n\t\t\t\t\tstate={props.state ? props.state[answer.id] : null}\n\t\t\t\t/>\n\t\t\t)\n\t\t})}\n\t</ul>\n)\n\nexport default AnswersList;","import React from 'react';\nimport classes from './ActiveQuiz.module.css'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => (\n\t<div className={classes.ActiveQuiz}>\n\t\t<p className={classes.Question}>\n\t\t\t<span>\n\t\t\t\t<strong>{props.answerNumber}. </strong>\n\t\t\t\t{props.question}\n\t\t\t</span>\n\t\t\t<small>{`${props.answerNumber} из ${props.quizLenght}`}</small>\n\t\t</p>\n\t\t<AnswersList\n\t\t\tstate={props.state}\n\t\t\tanswers={props.answers}\n\t\t\tonAnswerClick={props.onAnswerClick}\n\t\t/>\n\t</div>\n)\n\nexport default ActiveQuiz;","import React from 'react';\nimport classes from './FinishedQuiz.module.css'\nconst FinishQuiz = props => (\n\t<div className={classes.FinishedQuiz}>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<strong>1. </strong>\n\t\t\t\tКакака\n\t\t\t\t<i className={'fa fa-times ' + classes.error}></i>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong>1. </strong>\n\t\t\t\tКакака\n\t\t\t\t<i className={'fa fa-check ' + classes.success}></i>\n\t\t\t</li>\n\t\t</ul>\n\t\t<p>Правильно 4 из 10</p>\n\t\t<div>\n\t\t\t<button>Поаторить</button>\n\t\t</div>\n\t</div>\n)\n\nexport default FinishQuiz;","import React, {Component} from 'react';\nimport classes from './Quiz.module.css'\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\nimport FinishQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\n\nclass Quiz extends Component {\n\n\tstate = {\n\t\tisFinished: true,\n\t\tactiveQuestion: 0,\n\t\tanswerState: null,\n\t\tquiz: [\n\t\t\t{\n\t\t\t\tquestion: 'Какого цвета небо?',\n\t\t\t\trightAnswerId: 2,\n\t\t\t\tid: 1,\n\t\t\t\tanswers: [\n\t\t\t\t\t{text: 'Черный', id: 1},\n\t\t\t\t\t{text: 'Синий', id: 2},\n\t\t\t\t\t{text: 'Красный', id: 3},\n\t\t\t\t\t{text: 'Зеленый', id: 4},\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tquestion: 'В каком году основали Санкт-Петербург?',\n\t\t\t\trightAnswerId: 3,\n\t\t\t\tid: 2,\n\t\t\t\tanswers: [\n\t\t\t\t\t{text: '1700', id: 1},\n\t\t\t\t\t{text: '1702', id: 2},\n\t\t\t\t\t{text: '1703', id: 3},\n\t\t\t\t\t{text: '1800', id: 4},\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n\n\tonAnswerClickHandler = answerId => {\n\t\tif(this.state.answerState){\n\t\t\tconst key = Object.keys(this.state.answerState)[0]\n\t\t\tif(this.state.answerState[key] === 'success') return\n\t\t}\n\n\t\tconst question = this.state.quiz[this.state.activeQuestion]\n\n\t\tif (question.rightAnswerId === answerId){\n\t\t\tthis.setState({\n\t\t\t\tanswerState: {[answerId]: 'success'}\n\t\t\t})\n\t\t\tconst timeout = window.setTimeout(()=>{\n\t\t\t\tif(this.isQuizFinished()){\n\t\t\t\t\tthis.setState({isFinished:true})\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveQuestion: this.state.activeQuestion + 1,\n\t\t\t\t\t\tanswerState: null\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\twindow.clearTimeout(timeout)\n\t\t\t}, 1000)\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tanswerState: {[answerId]: 'error'}\n\t\t\t})\n\t\t}\n\n\t}\n\n\tisQuizFinished(){\n\t\treturn this.state.activeQuestion + 1 === this.state.quiz.length\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Quiz}>\n\t\t\t\t<div className={classes.QuizWrapper}>\n\t\t\t\t\t<h1>Ответьте на все вопросы</h1>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.isFinished\n\t\t\t\t\t\t? <FinishQuiz />\n\t\t\t\t\t\t: <ActiveQuiz\n\t\t\t\t\t\t\tanswers={this.state.quiz[this.state.activeQuestion].answers}\n\t\t\t\t\t\t\tquestion={this.state.quiz[this.state.activeQuestion].question}\n\t\t\t\t\t\t\tonAnswerClick={this.onAnswerClickHandler}\n\t\t\t\t\t\t\tquizLenght={this.state.quiz.length}\n\t\t\t\t\t\t\tanswerNumber={this.state.activeQuestion + 1}\n\t\t\t\t\t\t\tstate={this.state.answerState}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Quiz;","import React from 'react'\nimport Layout from \"./hoc/Layout/Layout\"\nimport Quiz from \"./containers/Quiz/Quiz\";\n\nfunction App() {\n\treturn (\n\t\t<Layout>\n\t\t\t<Quiz/>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}